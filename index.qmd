---
title: "Quarto OJS"
---

Quarto provides a number of format outputs, one of which is HTML. The
HTML format uniquely supports **interactivity**: web browsers can show
animations, respond to user input, and run user-defined code.
Quarto leverages [ObservableHQ](https://observablehq.com)'s runtime 
to support this kind of interactivity.
At a glance, this enables document authors to write code in a variant
of Javascript. We can use it to easily embed interactive visualizations in
Quarto documents:

```{ojs}
//| echo: false
//| output: false
graphJson = FileAttachment("./data/karate-club.json").json()
graph = {
  const nodeSet = new Set();
  const nodes = [];
  graphJson.edges.forEach(edge => {
    if (!nodeSet.has(edge.source)) {
      nodeSet.add(edge.source);
      nodes.push({id: edge.source});
    }
    if (!nodeSet.has(edge.target)) {
      nodeSet.add(edge.target);
      nodes.push({id: edge.target});
    }
  });
  return {
    nodes,
    links: graphJson.edges
  };
}
myHeight = 400
import { chart } with { graph as data, myHeight as height } from "@d3/force-directed-graph";
```

```{ojs}
//| echo: false
//| label: fig-karate-club
//| fig.cap: <a href="https://en.wikipedia.org/wiki/Zachary%27s_karate_club">Zachary's Karate club network</a>, visualized with d3's force-directed layout
chart
```
Quarto-OJS is built to make it easy for document authors to create a
range of documents, from interactive expository pieces to dashboards.

Your documents can use Python or R for data processing, and then use a
number of Javascript libraries (such as d3 or vega-lite) to present
the final output. You can write your own custom Javascript, or you can
directly import from existing reactive notebook, either in your Quarto
project or from ObservableHQ. If you're using R specifically, you can
use Quarto to build and run Shiny servers, and Shiny interop is a
breeze: Shiny reactives work directly as inputs to OJS cells (and OJS
views work as Shiny inputs).

## Getting started with Quarto OJS

* [Using Javascript](features/javascript.qmd)
* [Using OJS](features/not-javascript.qmd)
* [Reactive values](features/reactive-values.qmd)
* Communicating between R, Python, and OJS
  * [Sending values](features/sending-values-to-ojs.qmd)
  * [Using files](features/file-attachments.qmd)


